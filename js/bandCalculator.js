// Band Cost Calculator
document.getElementById("bandForm").addEventListener("submit", function (e) {
    e.preventDefault();
    const clientName = document.getElementById("clientName").value;
    const weddingLocation = document.getElementById("weddingLocation").value;
    const pricePerPerson = parseFloat(
        document.getElementById("pricePerPerson").value
    );
    const numPeople = parseInt(document.getElementById("numPeople").value);
    const sound = parseFloat(document.getElementById("soundCost").value) || 0;
    const dubaRental =
        parseFloat(document.getElementById("dubaRental").value) || 0;
    const dubaTransport =
        parseFloat(document.getElementById("dubaTransport").value) || 0;
    const valiTransport =
        parseFloat(document.getElementById("valiTransport").value) || 0;
    const cantatBiserica =
        parseFloat(document.getElementById("cantatBiserica").value) || 0;
    const needHotel = document.getElementById("needHotel").checked;
    const resultEl = document.getElementById("bandResult");

    if (isNaN(pricePerPerson) || isNaN(numPeople)) {
        resultEl.textContent = "‚ö†Ô∏è Please enter the required fields.";
        resultEl.style.color = "#D32F2F";
        return;
    }

    const bandTotal = pricePerPerson * numPeople;
    const extras =
        sound + dubaRental + dubaTransport + valiTransport + cantatBiserica;
    const total = bandTotal + extras;

    const expirationDate = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);
    const day = String(expirationDate.getDate()).padStart(2, "0");
    const month = String(expirationDate.getMonth() + 1).padStart(2, "0"); // Months are 0-indexed
    const year = expirationDate.getFullYear();
    const offerExpiration = `${day}-${month}-${year}`;

    // date event
    const romanianMonths = [
        "Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie",
        "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"
    ];

    const eventDateInput = document.getElementById("eventDate").value;
    let formattedEventDate = "DATE";

// Always compute formattedEventDate if eventDateInput is present
    if (eventDateInput) {
        const dateObj = new Date(eventDateInput);
        const day = String(dateObj.getDate()).padStart(2, "0");
        const month = String(dateObj.getMonth() + 1).padStart(2, "0");
        const year = dateObj.getFullYear();

        formattedEventDate = `${day}-${month}-${year}`;
    }

// Only compute hotelLine if needHotel is true

    let startDay = "";
    let nextDay = "";
    let monthName = "";

    let hotelLine = "";
    if (needHotel) {
        if (eventDateInput) {
            const dateObj = new Date(eventDateInput);
            const nextDayObj = new Date(dateObj);
            nextDayObj.setDate(dateObj.getDate() + 1);

            startDay = String(dateObj.getDate()).padStart(2, "0");
            nextDay = String(nextDayObj.getDate()).padStart(2, "0");
            monthName = romanianMonths[dateObj.getMonth()];

            hotelLine = `<li>‚Å†‚Å†1 noapte de cazare din <em><b>${startDay}->${nextDay} ${monthName}</b></em> pentru 5 sau 6 persoane in functie de pachetul ales</li>`;
        } else {
            hotelLine = `<li>‚Å†‚Å†1 noapte de cazare din <em><b>XX->XX MONTH</b></em> pentru 5 sau 6 persoane in functie de pachetul ales</li>`;
        }
    }

    let location = ""
    if(weddingLocation){
        location = `${weddingLocation}`
    } else{
        location = "LOCATION"
    }

    let client = ""
    if(clientName){
        client = `${clientName}`
    } else{
        client = "CLIENT"
    }

    // Prepare the biserica line if applicable
    let bisericaLine = "";
    if (cantatBiserica > 0) {
        bisericaLine = `<li>+cantat la ceremonia religioasa pian si voce 2-4 piese</li>`;
    }


    resultEl.innerHTML = `
    <div style="font-size: 1rem; color: #555;">üéµ Band: ‚Ç¨${bandTotal.toFixed(
        2
    )}</div>
    <div style="font-size: 1rem; color: #777;">‚ûï Extras: ‚Ç¨${extras.toFixed(
        2
    )}</div>
    <div style="font-size: 1.8rem; font-weight: bold; color: #2e7d32; margin-top: 10px;">
        üßæ TOTAL PRICE: ‚Ç¨${total}
    </div>

    <div style="margin-top: 30px; text-align: left; color: #333; line-height: 1.6;">
        <p>==================================</p>
        <p>Salut ${client},</p>
        <p>Am revenit cu oferta pentru <strong>${formattedEventDate}</strong>, <strong>${location}</strong></p>

        <h3>Ce oferim la eveniment:</h3>
        <ul>
            <li>‚úÖ Garanta ca vom oferi momente de neuitat care vor dainui o viata intreaga pentru voi cat si pentru invitatii vostri</li>
            <li>‚úÖ Momente speciale:
                <ul>
                    <li>‚Å† ‚Å†Intrare miri cu muzicƒÉ live</li>
                    <li>‚Å† ‚Å†3-4-5 sesiuni live (30-40 min) in functie de felurile de mancare servite</li>
                    <li>‚Å† ‚Å†Concert interactiv cu invita»õii (in functie de dorinta voastra si vibe)</li>
                    <li>‚Å† ‚Å†Moment muzical la intrarea tortului</li>
                    <li>‚Å† ‚Å†Anunturi</li>
                </ul>
            </li>
            <li>‚úÖ Repertoriu variat: Jazz, lounge, pop, piese cre»ôtine</li>
            <li>‚úÖ Flexibilitate: AdaptƒÉm volumul »ôi dinamica muzicii √Æn func»õie de atmosferƒÉ</li>
            <li>‚úÖ Sunet: Asiguram sunetul pe durata evenimentului la masa</li>
        </ul>

        <h3>Pachete disponibile:</h3>
        <p>üéµ<b>Full Band</b> ‚Äì ‚Ç¨${total}
        <ul>
            <li>Pian, voce, tobe, bass, chitara electrica, saxofon, sunet</li>
            ${bisericaLine}
        </ul>
        </p>


        <p>üéµ<b>Small Band</b> ‚Äì ‚Ç¨${total - pricePerPerson}
        <ul>
            <li>Pian, voce, tobe, bass, sunet, chitara electrica, <b>SAU</b> saxofon</li>
            ${bisericaLine}
        </ul>
        </p>


        <h3>üö©Costuri adi»õionale:</h3>
        <ul>
            <li>‚Å† ‚Å†Avans: ‚Ç¨350 pentru rezervarea datei (restul la finalul nun»õii, √Æn valutƒÉ)</li>
                ${hotelLine}
            <li>‚Å† ‚Å†In onorariul mentionat mai sus este <strong>inclus</strong> si transportul</li>
        </ul>

        <h3>üö©Op»õiuni suplimentare:</h3>
        <ul>
            <li>‚Å† ‚Å†Momente personalizate pe parcursul evenimentului</li>
        </ul>

        <p>
            üî∑ Oferta valabila pana la data de <strong>${offerExpiration}</strong><br/>
            üî∑ Pentru orice fel de intrebari va stam la dispozitie pentru a le discuta si a va ajuta cu raspuns si gidare.<br/>
            üî∑ DacƒÉ oferta este pe placul vostru, blocƒÉm data prin achitarea avansului.
        </p>
        <p>=================================</p>
    </div>`;

    // show church singing line if applicable
    const cantatBisericaLine =
        cantatBiserica > 0
            ? `- ‚õ™ Church singing: ‚Ç¨${cantatBiserica.toFixed(2)}\n`
            : "";

    const hotel =
        needHotel === true
            ? `- üè® 1 noapte de cazare din ${startDay}->${nextDay} ${monthName} pentru 5 sau 6 persoane`
            : "";

    const summaryLines = [
        `- üí∂ Band price per person: ‚Ç¨${pricePerPerson.toFixed(2)}`,
        `- üë• Number of people: ${numPeople}`,
        `- üîä Sound cost: ‚Ç¨${sound.toFixed(2)}`,
        `- üöê Van rental: ‚Ç¨${dubaRental.toFixed(2)}`,
        `- ‚õΩ Van fuel cost: ‚Ç¨${dubaTransport.toFixed(2)}`,
        `- ‚õΩ Vali fuel cost: ‚Ç¨${valiTransport.toFixed(2)}`,
        cantatBisericaLine.trim(),
        hotel.trim(),
    ]
        .filter((line) => line)
        .join("\n");

    const summaryText = `
üßæ TOTAL PRICE: ‚Ç¨${total.toFixed(2)}
${client}

${summaryLines}
`;

    const calendarBtn = document.getElementById("calendarBtn");
    calendarBtn.style.display = "block";
    calendarBtn.onclick = () => createICSFile(summaryText, eventDateInput, location);
});
